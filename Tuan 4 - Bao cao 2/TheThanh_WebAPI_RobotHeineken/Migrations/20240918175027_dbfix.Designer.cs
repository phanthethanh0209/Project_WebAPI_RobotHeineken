// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheThanh_WebAPI_RobotHeineken.Data;

#nullable disable

namespace TheThanh_WebAPI_RobotHeineken.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20240918175027_dbfix")]
    partial class dbfix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.ContainerFullHistory", b =>
                {
                    b.Property<int>("ContainerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContainerID"), 1L, 1);

                    b.Property<DateTime>("FullTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("MachineID")
                        .HasColumnType("int");

                    b.Property<int>("TotalHeinekenCans")
                        .HasColumnType("int");

                    b.Property<int>("TotalOtherCans")
                        .HasColumnType("int");

                    b.HasKey("ContainerID");

                    b.HasIndex("MachineID");

                    b.ToTable("ContainerFullHistory", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Gift", b =>
                {
                    b.Property<int>("GiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftID"), 1L, 1);

                    b.Property<string>("GiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("GiftID");

                    b.ToTable("Gift", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationID");

                    b.HasIndex("LocationName")
                        .IsUnique();

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Permission", b =>
                {
                    b.Property<int>("PermissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionID");

                    b.ToTable("Permission", (string)null);

                    b.HasData(
                        new
                        {
                            PermissionID = 1,
                            Name = "Create"
                        },
                        new
                        {
                            PermissionID = 2,
                            Name = "Delete"
                        },
                        new
                        {
                            PermissionID = 3,
                            Name = "Update"
                        },
                        new
                        {
                            PermissionID = 4,
                            Name = "GetAll"
                        },
                        new
                        {
                            PermissionID = 5,
                            Name = "GetSingle"
                        });
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.QRCode", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GiftID")
                        .HasColumnType("int");

                    b.Property<int>("HistoryID")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("TimeUsed")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.HasIndex("GiftID");

                    b.HasIndex("HistoryID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("QRCode", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"), 1L, 1);

                    b.Property<DateTime>("ApproachTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("HeinekenCans")
                        .HasColumnType("int");

                    b.Property<int?>("MachineID")
                        .HasColumnType("int");

                    b.Property<int>("OtherCans")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("MachineID");

                    b.ToTable("RecyclingHistory", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingMachine", b =>
                {
                    b.Property<int>("MachineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineID"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("ContainerStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DeploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("MachineCode")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("TotalHeinekenCans")
                        .HasColumnType("int");

                    b.Property<int>("TotalInteractions")
                        .HasColumnType("int");

                    b.Property<int>("TotalOtherCans")
                        .HasColumnType("int");

                    b.HasKey("MachineID");

                    b.HasIndex("LocationID");

                    b.HasIndex("MachineCode")
                        .IsUnique();

                    b.ToTable("RecyclingMachine", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IsssueAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RolePermission", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("PermissionID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "PermissionID");

                    b.HasIndex("PermissionID");

                    b.ToTable("RolePermission", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RoleUser", b =>
                {
                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RoleID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("RoleUser", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.ContainerFullHistory", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.RecyclingMachine", "RecyclingMachine")
                        .WithMany("ContainerFullHistories")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RecyclingMachine");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.QRCode", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.Gift", "Gift")
                        .WithMany("QRCodes")
                        .HasForeignKey("GiftID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.RecyclingHistory", "RecyclingHistory")
                        .WithOne("QRCode")
                        .HasForeignKey("TheThanh_WebAPI_RobotHeineken.Data.QRCode", "HistoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.User", "User")
                        .WithMany("QRCodes")
                        .HasForeignKey("UserID");

                    b.Navigation("Gift");

                    b.Navigation("RecyclingHistory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingHistory", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.RecyclingMachine", "RecyclingMachine")
                        .WithMany("RecyclingHistories")
                        .HasForeignKey("MachineID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RecyclingMachine");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingMachine", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.Location", "Location")
                        .WithMany("RecyclingMachines")
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RefreshToken", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.User", "Users")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RolePermission", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.Permission", "Permissions")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.Role", "Roles")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissions");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RoleUser", b =>
                {
                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.Role", "Roles")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheThanh_WebAPI_RobotHeineken.Data.User", "Users")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Gift", b =>
                {
                    b.Navigation("QRCodes");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Location", b =>
                {
                    b.Navigation("RecyclingMachines");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingHistory", b =>
                {
                    b.Navigation("QRCode")
                        .IsRequired();
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.RecyclingMachine", b =>
                {
                    b.Navigation("ContainerFullHistories");

                    b.Navigation("RecyclingHistories");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("TheThanh_WebAPI_RobotHeineken.Data.User", b =>
                {
                    b.Navigation("QRCodes");

                    b.Navigation("RefreshTokens");

                    b.Navigation("RoleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
